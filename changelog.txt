Upcoming:
- Fixed spawn.json not working correctly for mobs spawned using spawner.json

1.20-9.0.0:
- In Control for 1.20 works differently then previous versions. "onjoin" is gone. Instead there is now "when" with four possible values 'position', 'onjoin', 'finalize', and 'despawn'
- The 'special.json' file is gone. Instead you can now use 'spawn.json' for all your needs. Using 'when' at finalize you can now control the equipment and stats of mobs
- Merged all FxControl functionality into InControl

1.19.3-8.0.2:
- New 'addscoreboardtags' keyword for spawner.json and spawn.json. With this you can add scoreboard tags on each entity spawned by this rule
- New 'scoreboardtags_all' and 'scoreboardtags_any' conditions for spawn, experience, loot, special, and summonaid. These will test if all or any of the given tags are present on the entity
- New 'nodespawn' action for spawn, special, and summonaid. This will prevent the mob from despawning
- New 'time', 'height', and 'light' keywords which are supported wherever the corresponding min/max versions are supported. Using these keywords you can do more precise testing on the specific values. The wiki will contain more documentation on this
- The 'daycount' keyword now also supports this new expression syntax. Using this you can now do things like: 'spawn zombies for two days every 10 days and spawn creepers for one day in the same cycle'
- Added new 'minverticaldist' and 'maxverticaldist' keywords to the spawner system. These will allow you to specify a vertical distance between the spawner and the spawn position
- The spawner system will now fail if no dimensions are specified (as it should, it's not optional)
- Fixed a bug in 'addscoreboardtags'

1.19-7.1.5:
- Added new 'building' keyword that you can use to test as a condition. This will allow testing if (for example) a spawn is in a certain list of buildings
- Added support for the 'tag' keyword in a block description (in favor of the old and non functional 'ore' keyword)

1.19.3-8.0.1:
- Added new 'validspawn' and 'sturdy' conditions to the spawner system. This avoids spawning mobs on slabs for example

1.19.3-8.0.0:
- Port to 1.19.3

1.19-7.1.2:
- Fixed a problem with 'seesky' potentially locking the world in combination with onjoin: true

1.19-7.1.1:
- The 'spawner' check works correctly for special.json too now

1.19-7.1.0:
- Added an entirely new rule file (special.json). This rule file has 100% the same capabilities as the default spawn.json. However you don't control spawns in this rulie file but instead you have the option to control the equipment in a proper way. Rules in special.spawn have the following three results: "replace", "before", or "after". This way you can either replace or change the default vanilla behaviour with regards to setting default equipment, random follow range and handedness

1.19-7.0.16:
- Fixed a potential hang when using the new groupdistance feature

1.19-7.0.15:
- Fixed 'blockoffset' and also allow "x", "y", "z" to be specified directly inside 'blockoffset' tag (in addition to being supported inside the 'offset' child tag)

1.19-7.0.14:
- Support for Serene Seasons is working again

1.19-7.0.13:
- Fixed a bug in the new groupdistance feature

1.19-7.0.12:
- Technical change: wrong interpretation of SpecialSpawn

1.19-7.0.11:
- Technical change: mobs spawned through the spawner system will now correctly fire the SpecialSpawn event
- New feature 'groupdistance' for spawner.json (in the 'amount' section). If this is set to 0 or greater mobs will spawn in groups (with the groupdistance used as the maximum distance between them)

1.19-7.0.10:
- Improved parsing of itemstacks. Removed the obsolete @ notation (metadata). Instead of the InControl <itemid>/<nbtjson> syntax you can now also use the vanilla syntax <itemid>{<nbtjson>}. Also / is no longer restricted in the nbt string

1.19-7.0.9:
- Fixed major slowdown in biome testing

1.19-7.0.8:
- Better 'insphere' test using newer version of Lost Cities
- Added new 'slime' test to test if a position is in a slime chunk

1.19-7.0.7:
- Fixed a problem with 'canspawnhere' and 'notcolliding' potentially locking up worldgen

1.19-7.0.6:
- Nbt 'value' matching was broken

1.19-7.0.5:
- Fixed a potential incompatibility with fake worlds

1.19-7.0.4:
- Fixed a bug with nbt matching (comparing any given tag with 'value'). It would only work for numeric values. Now strings and boolean values are also supported

1.19-7.0.3:
- Updated to latest forge

1.19-7.0.2:
- Fixed the list and kill commands
- Fixed minlight/maxlight

1.19-7.0.1:
- Fixed a problem with the biome test. It would crash occasionally

1.19-7.0.0:
- First port to 1.19

1.18-6.0.11:
- Added support for babies (new 'baby' keyword)

1.18-6.0.10:
- New feature where you can specify 'all': true in a counting rule (similar to hostile/passive)

1.18-6.0.9:
- Fixed a deadlock problem with minlight/maxlight for chunks that were being generated
- Fixed a deadlock problem with the spawner

1.18-6.0.8:
- Fixed the 'continue' keyword in spawn.json

1.18-6.0.7:
- Mrbysco re-enabled GameStages support
- Re-enabled Lost Cities support
- 'helditem' as an action no longer worked

1.18-6.0.6:
- Port to 1.18.2

1.18-6.0.5:
- Made InControl compatible with FxControl again
- Fixed the 'phase' keyword for spawn rules

1.18-6.0.4:
- Bugfix with onjoin

1.18-6.0.3:
- Added checks everywhere to see if invalid keywords are being used. When a keyword is not recognized you will get a warning
- Added new 'daycount' condition for phases and normal rules. This condition will evaluate true every 'N'th day. For example, "daycount": 10 will be true on day 0, day 10, day 20, and so on

1.18-6.0.2:
- Fixed illegal limits on minheight/maxheight. They can now go negative

1.18-6.0.1:
- Added new 'healthset', 'damageset', and 'speedset' keywords to specifically hard-set these attributes instead of modifying them
- Fixed a problem with the spawner and negative heights
- Added protection to spawner so it doesn't try forever to find a suitable place to spawn a mob in case the box has a weird shape
- New statistics for spawn.json and spawner.json. These can help with debugging. Use the commands /incontrol showstats or /incontrol clearstats
- Fixed a problem where setting the current day (using /incontrol days) didn't get persisted correctly

1.18-6.0.0:
- First port to 1.18

1.16-5.2.2:
- Attempt two to fix the spawner deadlock

1.16-5.2.1:
- Fixed a problem with the spawner where it was possible to get a deadlock situation with a rule that never managed to succeed

1.16-5.2.0:
- InControl now keeps track of the day counter. Using the '/incontrol days' command you can see what the current day is and also change it. The day counter progresses whenever the time goes from night to day
- New 'mindaycount' and 'maxdaycount' tags for spawn.json, potentialspawn.json, summonaid.json, and also the new spawner.json.
- New phases.json rule file. There you can define phase rules for a limited set of global conditions. These phases can then be used in spawner, spawn, potentialspawn, ... for a more optimal way to check for rules
- New '/incontrol phases' command to check the current active phases
- New '/incontrol list' command to list all current mobs in the current world
- New 'weight' system for spawner so that you can now have relative weights for the different mobs spawned by a single rule
- The 'difficulty' test was broken
- Changed the 'inwater' option for spawner to only work for actual water and not for other fluids
- Added new 'inliquid' option which works for any liquid (as 'inwater' used to do)
- Added new 'inlava' option which works for lava
- Added the ability for spawner.json to spawn mobs that belong to the given biome. The new tag 'mobsfrombiome' can be used for that (instead of the normal 'mob' list). Possible values for this tag are: monster, creature, ambient, water_creature, water_ambient, and misc

1.16-5.1.9:
- 'angry' tag should work better now
- The spawner system will no longer at@Dtempt to spawn hostile mobs in peaceful mode
- Fixed a serious problem with spawn rules using 'onjoin' and the 'block' test. It was possible that this rule would cause a deadlock (a non responsive Minecraft basically)
- The spawner system will no longer try to spawn mobs in unloaded chunks
- Much better error reporting and no longer crashing the game when there are json errors

1.16-5.1.8:
- Fixed mintime and maxtime

1.16-5.1.7:
- Fixed structure testing for good hopefully
- Fixed a serious problem with 'onjoin': true. It would also work for players and by doing that you could prevent players from joining the world which unfortunatelly doesn't work too well. Changed so that players are no longer affected

1.16-5.1.6:
- Fixed a few tests to work properly on new chunks

1.16-5.1.5:
- Structure testing works again
- Added new 'dimensionmod' feature so that you can have a rule match for all dimensions of a given mod (like for example 'rftoolsdim')

1.16-5.1.4:
- Fixed a crash with the new spawner when the player moves outside world boundaries

1.16-5.1.3:
- LostCity support is working again
- Made counting slightly safer in rare circumstances

1.16-5.1.2:
- Gamestage support is working again

1.16-5.1.1:
- Small bugfix

1.16-5.1.0:
- Big new spawner system (spawner.json) which implements a custom spawner with very little restrictions
- New 'incontrol' tag for spawn.json to allow to test for a mob spawned by this new system

1.16-5.0.4:
- Fixed a big bug with the 'block' test which could cause worlgen to hang in some situations

1.16-5.0.3:
- Fixed a bug causing mob condition with multiple mobs to fail (one mob was fine)

1.16-5.0.2:
- The 'biome' test would crash on biomes that were created using json
- New 'continue' flag for spawn rules. If this is true then when this rule fires it will not prevent processing for subsequent rules. This can be used (for example) to give armor to mobs under certain circumstances but still do other processing later

1.16-5.0.1:
- The mob counter now ignores the nodespawn flag. This should make it more compatible with modded mobs

5.0.0:
- Biome registry name is now preferred for biome checks
- 'tempcategory' is removed and replaced with a more generic 'category' for biomes. It's also a list now. The list of current categories is: taiga, extreme_hills, jungle, mesa, plains, savanna, icy, the_end, beach, forest, ocean, desert, river, swamp, mushroom and nether
- 'biometype' has changed. It now only works for the following values: desert, desert_legacy, warm, cool, and icy
- Numerical dimension ID's no longer work (like 0 for the overworld. Use 'minecraft:overworld' instead)

4.0.4:
- Fixed a bug with the health, damage, and speed actions. They often fired multiple times making the mobs too OP

4.0.3:
- 'perchunk' is implemented again
- Avoid server-side crashes in combination with debug command

4.0.2:
- Darkere improved performance when removing large amounts of mobs in potential spawn

4.0.1:
- Fixed a problem where the config files where generated in the root

3.9.16:
- Fixed a problem where 'onjoin' rules were also firing on the client which could cause issues with some of the conditions that don't properly work on the client

3.9.15:
- Worked around a problem caused in the previous version. The issue was that there was both a condition called 'helditem' as well as an action called 'helditem'. For spawns the condition has been renamed to 'playerhelditem'. It is recommended to use this in other places as well (when used as a condition)

3.9.14:
- Implemented a much requested feature with the spawn rules. That is support for gamestages. In Control will use the closest player (with a configurable maximum distance of 100). In addition keywords like helditem, helmet, trinker, ... are now also supported for spawn rules

3.9.13:
- Fixed a problem with the mincount/maxcount always using a hostile counter

3.9.12:
- Fixed a compatibility problem with old maxcount/mincount syntax

3.9.11:
- Fixed a problem that 'onJoin' rules would also affect entities like item drops and non-living entities
- Much more powerful 'mincount' and 'maxcount' syntax. The old syntax is still supported but you can now use a JSON object to specify one or more entities to count on, count entities for a given mod, and count scaled per player or per loaded chunk
- Fixed a problem with Minecraft mods being reported as 'forge' instead of 'minecraft'

3.9.10:
- Removed some debug code

3.9.9:
- Allow 'count' for itemstacks with 'give' and related commands
- Big optimisation in how 'maxcount' and 'mincount' are handled

3.9.8:
- If a spawn rule has no explicit result given (as opposed to result default, deny, or allow) then InControl will no longer set any result but just leave the result in the event as it already is
- Added new 'customname' action for spawn rules that you can use to set customnames on mobs when they spawn (turns out this is not possible to do with NBT)
- The 'mintime' and 'maxtime' tests will now correctly work beyond the first day

3.9.7:
- Various cleanups from SM9
- Subscribe to events with lowest priority to potentially catch more mods which have the same subscriber (from SM9)
- Fixed 'remove' in potential spawn. It was broken

3.9.6:
- Update to be compatible with Fx Control

3.9.5:
- Update to be compatible with Fx Control

3.9.4:
- Loot control will now also support the more advanced itemstack syntax for removal. Note that this is a potentially compatibility breaking change as specifying something like 'minecraft:stone_sword' (without meta) will now match all stone swords while before it would only match stone_sword with meta 0

3.9.3:
- Fixed a bug with the 'empty' keyword for items
- Postponed loading of the rule files so that blocks/items from other mods can be found better

3.9.2:
- New 'mod' attribute for 'block' test so that you can test for modded blocks: 'block': { 'mod': 'rftools' }
- New 'mod' attribute for 'helditem' (and similar) test so that you can test for modded blocks
- New 'empty' attribute for 'helditem' (and similar) tests so that you can test for an empty item: 'helditem': { 'empty': true }
- New 'count' attribute for 'helditem' (and similar) tests so that you can add expresssions to test for amounts. For example 'helditem': { 'item': 'minecraft:coal', 'count': '>=10' }
- New 'ore' attribute for 'helditem' (and similar) tests to do ore dictionary tests
- New 'energy' attribute for 'helditem' (and similar) tests to that you can test for forge energy in an item. This supports expressions
- New 'energy' attribute for 'block' test to that you can test for forge energy in a block. There is also a new 'energyside' attribute which allows you to specify from which side the energy will be examined. If not given it will use null

3.9.1:
- Much more powerful item description system with expressions on damage and nbt
- Giving items (armor, helditem, give command) is now also much more general and supports the new system
- Removed 'blockup' command and instead add a more general 'blockoffset' command that works together with the 'block' command
- Added support for EnigmaScript though 'state' and 'pstate' tests

3.9.0:
- Added support for Serene Seasons with new 'winter', 'summer', 'spring', and 'autumn' boolean keywords
- Added support for baubles: new 'amulet', 'ring', 'belt', 'trinket', 'charm', 'body', 'and 'head' keywords
- New 'blockup' test for various rules which will test the condition of the block above the current position
- New 'message' action to print a status message on screen for the nearest player (for 'spawn')

3.8.3:
- New 'offhanditem' and 'bothhandsitem' tags that are equivalent to 'helditem' but also work on the offhand (or both)

3.8.2:
- Updated to 2.0 API of GameStages. This means that InControl is no longer compatible with the older GameStages

3.8.1:
- Added a rule to check for spawns by mob spawners
